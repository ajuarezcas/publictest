openapi: 3.1.0
info:
  title: Squid Proxy Logs Semantic API
  version: 1.0.0
  description: |
    Semantic, task-focused wrapper endpoints for querying the custom Sentinel table `SquidProxy_CL`.
    Each endpoint executes a parameterized KQL template against the Log Analytics workspace and returns a normalized JSON shape
    to maximize usefulness for Security Copilot reasoning while limiting result size and preventing arbitrary KQL injection.

servers:
  - url: https://api.loganalytics.io/v1

paths:
  /workspaces/{workspaceId}/query:listRecentProxyEvents:
    post:
      operationId: listRecentProxyEvents
      summary: List recent proxy events ordered by newest first.
      description: Returns the most recent Squid proxy events within a time window (default last 60 minutes) with key network attributes.
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
            description: Log Analytics Workspace ID (GUID).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                minutesBack:
                  type: integer
                  minimum: 5
                  maximum: 1440
                  default: 60
                limit:
                  type: integer
                  minimum: 1
                  maximum: 200
                  default: 50
              required: []
      responses:
        '200':
          description: Successful query execution.
          content:
            application/json:
              schema:
                type: object
                properties:
                  queryWindow:
                    type: string
                    description: ISO8601 duration representing lookback window.
                  rowCount:
                    type: integer
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        timeGenerated: { type: string, format: date-time }
                        computer: { type: string }
                        source: { type: string }
                        destinationIp: { type: string }
                        destinationPort: { type: integer }
                        user: { type: string }
                        method: { type: string }
                        url: { type: string }
                        statusCode: { type: integer }
                        bytesSent: { type: integer }
                        bytesReceived: { type: integer }
                        logType: { type: string }
        '400':
          description: Invalid parameters.
        '401':
          description: Unauthorized.
        '500':
          description: Internal error running query.

  /workspaces/{workspaceId}/query:searchProxyByClientIp:
    post:
      operationId: searchProxyByClientIp
      summary: Search proxy events by destination IP.
      description: Search SquidProxy_CL for events where DestinationIP_s matches the provided IP within a lookback window.
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ip:
                  type: string
                  description: Exact IP address to match against DestinationIP_s.
                minutesBack:
                  type: integer
                  minimum: 5
                  maximum: 10080
                  default: 1440
                limit:
                  type: integer
                  minimum: 1
                  maximum: 500
                  default: 100
              required: [ip]
      responses:
        '200':
          description: Successful query execution.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ip: { type: string }
                  rowCount: { type: integer }
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        timeGenerated: { type: string, format: date-time }
                        computer: { type: string }
                        destinationIp: { type: string }
                        destinationPort: { type: integer }
                        user: { type: string }
                        method: { type: string }
                        url: { type: string }
                        statusCode: { type: integer }
                        bytesSent: { type: integer }
                        bytesReceived: { type: integer }
        '400': { description: Invalid parameters }
        '401': { description: Unauthorized }
        '500': { description: Internal error }

  /workspaces/{workspaceId}/query:summarizeProxyStatusCodes:
    post:
      operationId: summarizeProxyStatusCodes
      summary: Summarize HTTP status codes distribution.
      description: Returns a count summary of HTTP response status codes for SquidProxy_CL in a time window, highlighting top codes.
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                minutesBack:
                  type: integer
                  minimum: 5
                  maximum: 10080
                  default: 1440
                top:
                  type: integer
                  minimum: 1
                  maximum: 50
                  default: 20
              required: []
      responses:
        '200':
          description: Summary returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  queryWindow: { type: string }
                  totalEvents: { type: integer }
                  statusSummary:
                    type: array
                    items:
                      type: object
                      properties:
                        statusCode: { type: integer }
                        count: { type: integer }
                        percentage: { type: number, format: float }
        '400': { description: Invalid parameters }
        '401': { description: Unauthorized }
        '500': { description: Internal error }

  /workspaces/{workspaceId}/query:topProxyDestinations:
    post:
      operationId: topProxyDestinations
      summary: Top requested destination hosts / IPs.
      description: Returns the most frequently accessed destination IPs (or URLs host component if derivable) in the time window.
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                minutesBack:
                  type: integer
                  minimum: 5
                  maximum: 10080
                  default: 1440
                limit:
                  type: integer
                  minimum: 1
                  maximum: 100
                  default: 20
              required: []
      responses:
        '200':
          description: Top destinations summary.
          content:
            application/json:
              schema:
                type: object
                properties:
                  queryWindow: { type: string }
                  destinations:
                    type: array
                    items:
                      type: object
                      properties:
                        destinationIp: { type: string }
                        requestCount: { type: integer }
                        bytesSentTotal: { type: integer }
                        bytesReceivedTotal: { type: integer }
        '400': { description: Invalid parameters }
        '401': { description: Unauthorized }
        '500': { description: Internal error }

components:
  schemas: {}
